#!/bin/bash

if [ $# -lt 2 ]; then
  cat <<End
Extract lines from a large file

Usage:
------

cat file | lines start end

Examples:
---------

> echo -e "1\n2\n3\n4\n5" | lines 2 3
2
3

If you specify 'end' as the end line number, it will go from start line all the way to end. You can use this to print all 
lines except the 1st line of a file, for example -- even when you don't know in advance how many lines you are piping
to this command.

> echo -e "1\n2\n3\n4\n5" | lines 3 end
3
4
5


End
  exit 1
fi
if file $( readlink /proc/$$/fd/0 ) | grep -q "character special"; then
  # Standard input
  echo "Error: Detected that input was standard input. You MUST pipe a stream to this command."
  echo "$0 --help for help"
  exit 1
fi
#---------------------------------------------------------------------------------------------------

startl=$1
endl=$2

if [ "$endl" = "end" ]; then
    endl=`exec cat - | tee /tmp/lines_command | wc -l`
    diff=`expr $endl - $startl + 1`
    exec cat /tmp/lines_command | head -n $endl | tail -n $diff
else
    diff=`expr $endl - $startl + 1`
    exec cat - | head -n $endl | tail -n $diff
fi

